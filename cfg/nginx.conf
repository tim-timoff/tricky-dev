user  nginx_usr;
worker_processes  auto;

error_log  /var/www/tricky/logs/nginx_error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
    
    server {
        listen      80 default_server;
        listen      [::]:80;
        server_name localhost 127.0.0.1;
        root        /var/www/tricky/; # set root for entire server
        index       html/slug.html;

        access_log  /var/www/tricky/logs/nginx_access.log  main;

        # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;

        error_page 404 /html/errors/404.html;
        location = html/errors/404.html {
        }

        error_page 500 502 503 504 /html/errors/50x.html;
        location = html/errors/50x.html {
        }

        location /angular/ {
        try_files $uri $uri/ @angular;
        }

        location @angular {
            # Assuming your Angular development server is running on port 4200
            proxy_pass http://127.0.0.1:4200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            server_name_in_redirect off;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            index html/slug.html;
            try_files $uri $uri/ html/slug.html;

            proxy_pass http://127.0.0.1:3030$request_uri; # Assuming your Express server is running on port 3030
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            server_name_in_redirect off;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        server_name alpha.localhost alpha.127.0.0.1;
        root /var/www/tricky/;
        index html/home.html;

        access_log  /var/www/tricky/logs/nginx_alpha_access.log  main;

        location /angular/ {
            try_files $uri $uri/ @angular;
        }

        location @angular {
            # Assuming your Angular development server is running on port 4200
            proxy_pass http://127.0.0.1:4200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            server_name_in_redirect off;
            proxy_cache_bypass $http_upgrade;
        }

        location /a-n {
            # Assuming your Express server is running on port 8080
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            server_name_in_redirect off;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            # Additional configurations for the rest of the routes
            proxy_pass http://127.0.0.1:3030;  # Assuming your Express server is running on port 3030
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            server_name_in_redirect off;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
